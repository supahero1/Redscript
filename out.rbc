tell_player_is_odd_or_even:
	SAVE (reg){(id=0) op=1, vacant=1}, {{num, 0, 0, 43}, name=num, scope=1, typeinf=1, (g=0, c=0)}
	MATH (reg){(id=0) op=1, vacant=1}, (const){T=2, v=3}, (const){T=2, v=4}
	IF (reg){(id=0) op=1, vacant=1}, (const){T=18, v===}, (const){T=2, v=0}
	PUSH (const){T=1, v=msg}, (const){T=1, v=_msg}, (const){T=6, v=r}
	PUSH (const){T=1, v=msg}, (const){T=1, v=_p}, (const){T=1, v=X is even.}
	CALL (const){T=1, v=msg}
	ELSE
	PUSH (const){T=1, v=msg}, (const){T=1, v=_msg}, (const){T=6, v=r}
	PUSH (const){T=1, v=msg}, (const){T=1, v=_p}, (const){T=1, v=X is odd.}
	CALL (const){T=1, v=msg}
	ENDIF
kill:
msg:
CREATE {{x, 0, 0, 1}, name=x, scope=0, typeinf=1, (g=1, c=0)}, (const){T=2, v=4}
PUSH (const){T=1, v=tell_player_is_odd_or_even}, (const){T=1, v=num}, (const){T=2, v=8375325723}
CALL (const){T=1, v=tell_player_is_odd_or_even}
POP 
